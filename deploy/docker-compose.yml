version: '3.9'

networks:
  backend:
    driver: bridge

services:
  api:
    container_name: api_container
    build:
      context: .
      dockerfile: ./deploy/Dockerfile
      target: prod
    ports:
    - "8000:8000"
    image: fosit_ecommerce_store:${FOSIT_ECOMMERCE_STORE_VERSION:-latest}
    restart: always
    env_file:
    - .env
    networks:
    - backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      FOSIT_ECOMMERCE_STORE_HOST: 0.0.0.0
      FOSIT_ECOMMERCE_STORE_DB_HOST: db
      FOSIT_ECOMMERCE_STORE_DB_PORT: 3306
      FOSIT_ECOMMERCE_STORE_DB_USER: ${FOSIT_ECOMMERCE_STORE_DB_USER}
      FOSIT_ECOMMERCE_STORE_DB_PASS: ${FOSIT_ECOMMERCE_STORE_DB_PASS}
      FOSIT_ECOMMERCE_STORE_DB_NAME: ${FOSIT_ECOMMERCE_STORE_DB_NAME}

  db:
    image: mysql:8.1.0
    container_name: db_container
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_USER: ${FOSIT_ECOMMERCE_STORE_DB_USER}
      MYSQL_ROOT_PASSWORD: ${FOSIT_ECOMMERCE_STORE_DB_PASS}
      MYSQL_DATABASE: ${FOSIT_ECOMMERCE_STORE_DB_NAME}
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
    - backend

  migrator:
    image: fosit_ecommerce_store:${FOSIT_ECOMMERCE_STORE_VERSION:-latest}
    container_name: migrator_container
    restart: "no"
    command: aerich upgrade
    environment:
      FOSIT_ECOMMERCE_STORE_DB_HOST: db
      FOSIT_ECOMMERCE_STORE_DB_PORT: 3306
      FOSIT_ECOMMERCE_STORE_DB_USER: ${FOSIT_ECOMMERCE_STORE_DB_USER}
      FOSIT_ECOMMERCE_STORE_DB_PASS: ${FOSIT_ECOMMERCE_STORE_DB_PASS}
      FOSIT_ECOMMERCE_STORE_DB_NAME: ${FOSIT_ECOMMERCE_STORE_DB_NAME}
    networks:
    - backend
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
